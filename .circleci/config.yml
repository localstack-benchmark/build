version: 2.1

parameters:
  ubuntu-amd64-machine-image:
    type: string
    default: "ubuntu-2004:2022.04.1"
  ubuntu-arm64-machine-image:
    type: string
    default: "ubuntu-2004:2022.04.1"

executors:
  ubuntu-machine-amd64:
    machine:
      image: << pipeline.parameters.ubuntu-amd64-machine-image >>

commands:
  install-nsc:
    steps:
      - run: 
          name: Install latest nsc
          command: |
            curl -H 'CI: true' -fsSL https://get.namespace.so/cloud/install.sh | NS_ROOT=/tmp/nsc sh
            echo 'export PATH="/tmp/nsc/bin:$PATH"' >> "$BASH_ENV" && source "$BASH_ENV"

jobs:
  install:
    executor: ubuntu-machine-amd64
    working_directory: /tmp/workspace/repo
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init

      - restore_cache:
          key: python-requirements-{{ checksum "localstack/setup.cfg" }}
      - run:
          name: Install prerequisites
          command: |
            # fix for: https://discuss.circleci.com/t/heroku-gpg-issues-in-ubuntu-images/43834/3
            sudo rm -rf /etc/apt/sources.list.d/heroku.list
            sudo apt-get update
            sudo apt-get install -y libsasl2-dev
      - run:
          name: Setup environment
          command: |
            cd localstack

            make install
            mkdir -p target/reports
            mkdir -p target/coverage
      - save_cache:
          key: python-requirements-{{ checksum "localstack/setup.cfg" }}
          paths:
            - "~/.cache/pip"
      - persist_to_workspace:
          root:
            /tmp/workspace
          paths:
            - repo

  docker-build:
    parameters:
      platform:
        description: "Platform to build for"
        default: "amd64"
        type: string
      machine_image:
        description: "CircleCI machine type to run at"
        default: "ubuntu-2004:202107-02"
        type: string
      resource_class:
        description: "CircleCI machine type to run at"
        default: "medium"
        type: string
    machine:
      image: << parameters.machine_image >>
    resource_class: << parameters.resource_class >>
    working_directory: /tmp/workspace/repo/localstack
    steps:
      - attach_workspace:
          at: /tmp/workspace

      - run:
          name: Build community docker image
          command: | 
            # Ensure exclusive cache access for apt and pip
            sed -i 's/--mount=type=cache/--mount=type=cache,sharing=locked/g' ./Dockerfile
  
            make docker-build

  nsc-build:
    executor: ubuntu-machine-amd64
    working_directory: /tmp/workspace/repo/localstack
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          # CircleCI packages an old buildx version that does not support remote buildx drivers. 
          name: update buildx
          command: |
            docker buildx version

            mkdir -p ~/.docker/cli-plugins
            wget -O ~/.docker/cli-plugins/docker-buildx https://github.com/docker/buildx/releases/download/v0.10.4/buildx-v0.10.4.linux-amd64
            chmod +x ~/.docker/cli-plugins/docker-buildx

            docker buildx version

      - install-nsc
      - run:
          name: Install nsc remote builder
          command: |
            # Log into Namespace Cloud workspace
            nsc auth exchange-circleci-token

            nsc docker buildx setup --background --use
      - run:
          name: Build community docker image
          environment:
            DOCKER_BUILD_FLAGS: "--platform linux/amd64,linux/arm64"
          command: |
            # Ensure exclusive cache access for apt and pip
            sed -i 's/--mount=type=cache/--mount=type=cache,sharing=locked/g' ./Dockerfile

            # Based on `make docker-build` but use default build cache (in remote builder)
            docker buildx build \
              --build-arg LOCALSTACK_PRE_RELEASE=$(cat localstack/__init__.py | grep '^__version__ =' | grep -v '.dev' >> /dev/null && echo "0" || echo "1") \
              --build-arg LOCALSTACK_BUILD_GIT_HASH=$(git rev-parse --short HEAD) \
              --build-arg=LOCALSTACK_BUILD_DATE=$(date -u +"%Y-%m-%d") \
              --build-arg=LOCALSTACK_BUILD_VERSION=$(cat localstack/__init__.py | grep '^__version__ =' | sed "s/__version__ = ['\"]\(.*\)['\"].*/\1/") \
              --add-host="localhost.localdomain:127.0.0.1" \
              -t localstack/localstack . -f ./Dockerfile


workflows:
  main:
    jobs:
      - install
      - nsc-build:
          name: nsc-build-amd64-arm64
          requires:
            - install
      # The Docker build steps are not required but left in for performance comparison.
      - docker-build:
          name: docker-build-amd64
          platform: amd64
          machine_image: << pipeline.parameters.ubuntu-amd64-machine-image >>
          resource_class: medium
          requires:
            - install
      - docker-build:
          name: docker-build-arm64
          platform: arm64
          # The latest version of ubuntu is not yet supported for ARM:
          # https://circleci.com/docs/2.0/arm-resources/
          machine_image: << pipeline.parameters.ubuntu-arm64-machine-image >>
          resource_class: arm.medium
          requires:
            - install
